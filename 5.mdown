#Q3 - JavaScript 中的this
```javascript 
function Foo() {
    getName = function () { alert (1); };
    return this;
}
Foo.getName = function () { alert (2);};
Foo.prototype.getName = function () { alert (3);};
var getName = function () { alert (4);};
function getName() { alert (5);}


Foo.getName();//2
getName();//4
Foo().getName();//1
getName();//1
new Foo.getName();//2
new Foo().getName();//3
new new Foo().getName();//3
```

主要涉及到 作用域以及This指向的问题！

### 调用形式         this指向
  - 普通函数         全局对象window
  - 对象的方法    该对象
  - 构造函数         新构造的对象

### 普通函数调用
这是函数的最通常用法，属于全局性调用，因此this就代表全局对象Global
```javascript
function test(){
　　　　this.x = 1;
　　　　alert(this.x);
　　}
　　test(); // 1

OR

var x = 1;
　　function test(){
　　　　alert(this.x);
　　}
　　test(); // 1

OR

var x = 1;
　　function test(){
　　　　this.x = 0;
　　}
　　test();
　　alert(x); //0
```

### 对象的成员方法
函数还可以作为某个对象的方法调用，这时this就指这个上级对象。

```javascript
function test(){
　　　　alert(this.x);
}
　　var o = {};
　　o.x = 1;
　　o.m = test;
　　o.m(); // 1
```

### 作为构造函数调用
所谓构造函数，就是通过这个函数生成一个新对象（object）。这时，this就指这个新对象


```javascript
function test(){
　　　　this.x = 1;
　　}
　　var o = new test();
　　alert(o.x); // 1

等价于

var x = 2;
　function test(){
　　　　this.x = 1;
 }
var o = new test();
alert(x); //2
```

### apply 调用
apply()是函数对象的一个方法，它的作用是改变函数的调用对象，它的第一个参数就表示改变后的调用这个函数的对象。因此，this指的就是这第一个参数。
在Ember里边有等价的方法，bind ，jquery里面叫做 jquery.proxy（）

```javascript
   var x = 0;
　　function test(){
　　　　alert(this.x);
　　}
　　var o={};
　　o.x = 1;
　　o.m = test;
　　o.m.apply(); //0
```
apply()的参数为空时，默认调用全局对象。因此，这时的运行结果为0，证明this指的是全局对象。
如果把最后一行代码修改为
`o.m.apply();//1`



